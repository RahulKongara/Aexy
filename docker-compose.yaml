version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: aexy-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: rahul402
      POSTGRES_DB: aexy
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aexy-network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: aexy-backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://postgres:rahul402@postgres:5432/aexy?schema=public
      JWT_SECRET: supersecretkey1234567890
      PORT: 5000
      NODE_ENV: production
      GEMINI_API_KEY: ${GEMINI_API_KEY:-AIzaSyC4FZKcWg2_bxNoLxvrUyGdTavp3rGAr2A}
      USE_REAL_AI: ${USE_REAL_AI:-true}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - aexy-network
    command: sh -c "npx prisma migrate deploy && npx prisma generate && npx tsx src/server.ts"

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: aexy-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:5000
      VITE_WS_URL: ws://localhost:5000
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - aexy-network
    command: npm run dev -- --host 0.0.0.0

networks:
  aexy-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
